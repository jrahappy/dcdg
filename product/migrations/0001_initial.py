# Generated by Django 5.2.4 on 2025-08-02 13:22

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=50, unique=True)),
                ('category', models.CharField(choices=[('equipment', 'Equipment'), ('supplies', 'Supplies'), ('instruments', 'Instruments'), ('materials', 'Materials'), ('software', 'Software'), ('services', 'Services'), ('other', 'Other')], default='other', max_length=20)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('manufacturer', models.CharField(blank=True, max_length=100)),
                ('short_description', models.CharField(help_text='Brief description for listings', max_length=255)),
                ('long_description', models.TextField(help_text='Detailed product description')),
                ('features', models.TextField(blank=True, help_text='Product features (one per line)')),
                ('specifications', models.JSONField(blank=True, default=dict, help_text='Technical specifications as key-value pairs')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost', models.DecimalField(blank=True, decimal_places=2, help_text='Cost price for margin calculations', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('quantity_in_stock', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('minimum_stock_level', models.IntegerField(default=5, help_text='Alert when stock falls below this level', validators=[django.core.validators.MinValueValidator(0)])),
                ('weight', models.DecimalField(blank=True, decimal_places=3, help_text='Weight in kg', max_digits=10, null=True)),
                ('dimensions', models.CharField(blank=True, help_text='L x W x H in cm', max_length=100)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='products/main/')),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='products/thumbnails/')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('discontinued', 'Discontinued'), ('draft', 'Draft')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views_count', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('doc_type', models.CharField(choices=[('manual', 'User Manual'), ('spec_sheet', 'Specification Sheet'), ('brochure', 'Brochure'), ('warranty', 'Warranty Information'), ('installation', 'Installation Guide'), ('safety', 'Safety Data Sheet'), ('certificate', 'Certificate'), ('other', 'Other')], default='other', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(help_text='PDF, DOC, DOCX files allowed', upload_to='products/documents/')),
                ('file_size', models.IntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('is_public', models.BooleanField(default=True, help_text='Whether this document is publicly accessible')),
                ('download_count', models.IntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='product.product')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_docs_uploaded', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Document',
                'verbose_name_plural': 'Product Documents',
                'ordering': ['doc_type', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['order', 'uploaded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='product_pro_sku_34f508_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='product_pro_slug_33a021_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['status', 'category'], name='product_pro_status_42a9a9_idx'),
        ),
    ]
