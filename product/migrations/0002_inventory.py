# Generated by Django 5.2.4 on 2025-08-02 13:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('customer', '0002_customeraddress'),
        ('product', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(help_text='Unique serial number for this item', max_length=100, unique=True)),
                ('batch_number', models.CharField(blank=True, help_text='Manufacturing batch/lot number', max_length=50)),
                ('status', models.CharField(choices=[('available', 'Available'), ('sold', 'Sold'), ('reserved', 'Reserved'), ('returned', 'Returned'), ('defective', 'Defective'), ('in_repair', 'In Repair'), ('lost', 'Lost'), ('disposed', 'Disposed')], default='available', max_length=20)),
                ('condition', models.CharField(default='New', help_text='e.g., New, Refurbished, Used', max_length=50)),
                ('purchase_date', models.DateField(blank=True, help_text='Date when item was purchased/received', null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, help_text='Purchase price for this specific item', max_digits=10, null=True)),
                ('supplier', models.CharField(blank=True, help_text='Supplier/vendor name', max_length=200)),
                ('purchase_order_number', models.CharField(blank=True, help_text='PO number for tracking', max_length=50)),
                ('warranty_start_date', models.DateField(blank=True, help_text='Warranty start date (usually purchase/activation date)', null=True)),
                ('warranty_end_date', models.DateField(blank=True, help_text='Warranty expiration date', null=True)),
                ('warranty_status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('void', 'Void'), ('extended', 'Extended'), ('na', 'Not Applicable')], default='na', max_length=20)),
                ('warranty_provider', models.CharField(blank=True, help_text='Warranty provider (manufacturer, third-party, etc.)', max_length=200)),
                ('warranty_terms', models.TextField(blank=True, help_text='Specific warranty terms and conditions')),
                ('extended_warranty_end_date', models.DateField(blank=True, help_text='Extended warranty expiration date if applicable', null=True)),
                ('current_location', models.CharField(blank=True, help_text='Current physical location of the item', max_length=200)),
                ('assigned_date', models.DateTimeField(blank=True, help_text='Date when item was assigned', null=True)),
                ('sale_date', models.DateField(blank=True, help_text='Date when item was sold', null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='Actual sale price for this item', max_digits=10, null=True)),
                ('last_service_date', models.DateField(blank=True, help_text='Last service/maintenance date', null=True)),
                ('next_service_date', models.DateField(blank=True, help_text='Next scheduled service date', null=True)),
                ('service_history', models.TextField(blank=True, help_text='Service and repair history')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this item')),
                ('barcode', models.CharField(blank=True, help_text='Barcode for scanning', max_length=100)),
                ('qr_code', models.CharField(blank=True, help_text='QR code data', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='User/customer this item is assigned to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_inventory', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, help_text='Customer who purchased this item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchased_items', to='customer.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_items', to='product.product')),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['serial_number'], name='product_inv_serial__1dc7be_idx'), models.Index(fields=['status'], name='product_inv_status_faa9c1_idx'), models.Index(fields=['product', 'status'], name='product_inv_product_f6b73e_idx'), models.Index(fields=['warranty_end_date'], name='product_inv_warrant_b01b23_idx')],
            },
        ),
    ]
