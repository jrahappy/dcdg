{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(python:*)",
      "Bash(venvScripts:*)",
      "Bash(pip install:*)",
      "Bash(mkdir:*)",
      "Bash(del db.sqlite3)",
      "Bash(rm:*)",
      "Bash(cmd /c:*)",
      "Bash(\"venv\\Scripts\\python.exe\":*)",
      "Bash(\"venv\\Scripts\\pip.exe\" install Django)",
      "Bash(\"venv\\Scripts\\pip.exe\" install Pillow)",
      "Bash(pip index versions:*)",
      "Bash(\"venv\\Scripts\\pip.exe\" show django-allauth)",
      "Bash(\"venv\\Scripts\\pip.exe\" install --upgrade django-allauth)",
      "Bash(\"venv\\Scripts\\pip.exe\" install --upgrade django-extensions python-dotenv Pillow)",
      "Bash(copy db.sqlite3 db.sqlite3.backup)",
      "Bash(cp:*)",
      "Bash(taskkill:*)",
      "Bash(where python)",
      "Bash(D:DevdcdgdcdgvenvScriptsactivate.bat)",
      "Bash(powershell:*)",
      "Bash(D:DevdcdgdcdgvenvScriptspython.exe --version)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" --version)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py startapp customer)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py makemigrations customer)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py migrate customer)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py startapp dashboard)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/pip.exe\" list)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py startapp email_campaign)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py makemigrations email_campaign)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py migrate email_campaign)",
      "Bash(curl:*)",
      "Bash(find:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py runserver)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py startapp product)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py migrate product)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py showmigrations customer)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py makemigrations)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py migrate)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py startapp sales)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py makemigrations sales)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py migrate sales)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py add_fake_products)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py startapp inventory)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py startapp purchases)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py makemigrations purchases)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py migrate purchases)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py check)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py show_urls)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py shell -c \"from product.models import Inventory; print(Inventory.objects.filter(pk=2).exists())\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations purchases)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py shell -c \"from purchases.models import PurchaseOrder; print(f''Number of existing PurchaseOrders: {PurchaseOrder.objects.count()}'')\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate purchases)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations product)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate product)",
      "Bash(del \"D:\\Dev\\dcdg\\dcdg\\product\\migrations\\0005_category_and_more.py\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py check)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py startapp shop)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations shop)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate shop)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py startapp customer_portal)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations customer)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate customer)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py runserver)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe -c \"import sys; print(''\\n''.join(sys.path))\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py shell -c \"from django.apps import apps; print([app.name for app in apps.get_app_configs() if ''customer'' in app.name])\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py shell -c \"from django.template.loader import get_template; t = get_template(''customer_portal/dashboard.html''); print(''Template loaded successfully'')\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py shell -c \"from shop.models import ShippingRate; print(f''Shipping rates count: {ShippingRate.objects.count()}'')\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py shell:*)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations sales)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate sales)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe migrate_shop_orders.py)",
      "Bash(del migrate_shop_orders.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/pip.exe install django-extensions django-debug-toolbar)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations customer -n change_user_related_name)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py startapp chat)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations chat)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate chat)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/pip.exe install channels daphne channels-redis)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/daphne.exe -b 127.0.0.1 -p 8000 core.asgi:application)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py collectstatic --noinput --clear)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations customer_portal)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate customer_portal)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations sales -n make_payment_customer_nullable)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe -c \"from django.contrib.admin.views.decorators import staff_member_required; print(''staff_member_required imported successfully'')\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations email_campaign)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate email_campaign)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py show_urls)",
      "Bash(del \"D:\\Dev\\dcdg\\dcdg\\DDevdcdgdcdgpurchasesviews.py\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations product -n remove_unique_slug)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/pip.exe install requests beautifulsoup4)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe download_images.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/pip.exe install reportlab xhtml2pdf)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py startapp factory)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations factory)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate factory)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py startapp factory_portal)",
      "Bash(del \"D:\\Dev\\dcdg\\dcdg\\accounts\\adapters.py\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations customer -n add_organization_support)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe test_organization_access.py)",
      "Bash(del D:Devdcdgdcdgtest_organization_access.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations accounts)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate accounts)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe test_organization_relationship.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe -c \"import django_summernote; print(''Summernote is installed and importable'')\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py runserver 0.0.0.0:8001)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe -c \"\nfrom django.apps import apps\nfrom django.db import models\n\n# Check all fields with choices\nfor app in apps.get_app_configs():\n    if ''django'' not in app.name and ''allauth'' not in app.name:\n        for model in app.get_models():\n            for field in model._meta.get_fields():\n                if hasattr(field, ''choices'') and field.choices:\n                    choices_list = list(field.choices)\n                    if choices_list:\n                        first_choice = choices_list[0]\n                        if not isinstance(first_choice, (list, tuple)) or len(first_choice) != 2:\n                            print(f''{app.name}.{model.__name__}.{field.name}: Invalid format - {first_choice}'')\n                        elif len(choices_list) > 0:\n                            # Check if any choice has wrong format\n                            for choice in choices_list:\n                                if not isinstance(choice, (list, tuple)) or len(choice) != 2:\n                                    print(f''{app.name}.{model.__name__}.{field.name}: Bad choice - {choice}'')\n                                    break\n\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe -c \"from django.apps import apps; from django.db import models; [print(f''{app.name}.{model.__name__}.{field.name}: {len(list(field.choices)[0]) if list(field.choices) else 0}'') for app in apps.get_app_configs() if ''django'' not in app.name and ''allauth'' not in app.name for model in app.get_models() for field in model._meta.get_fields() if hasattr(field, ''choices'') and field.choices and list(field.choices) and len(list(field.choices)[0]) != 2]\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe test_choices.py)",
      "Bash(del test_choices.py)",
      "Bash(del D:Devdcdgdcdgtest_choices.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe -c \"\nfrom django.apps import apps\nfor app in apps.get_app_configs():\n    if ''django'' not in app.name and ''allauth'' not in app.name:\n        for model in app.get_models():\n            for field in model._meta.get_fields():\n                if hasattr(field, ''choices'') and field.choices:\n                    choices_list = list(field.choices)\n                    for choice in choices_list:\n                        if isinstance(choice, (list, tuple)) and len(choice) == 4:\n                            print(f''{app.name}.{model.__name__}.{field.name}: Found 4-element choice: {choice}'')\n                        elif isinstance(choice, (list, tuple)) and len(choice) > 2:\n                            print(f''{app.name}.{model.__name__}.{field.name}: Found {len(choice)}-element choice: {choice}'')\n\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py runserver --verbosity 2)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe test_schema.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe test_shop_queries.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe test_product_queries.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe test_option_queries.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe test_category_queries.py)",
      "Bash(mv:*)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate)",
      "Bash(del:*)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations sales -n remove_old_shipping_fields)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/pip.exe list)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/pip.exe install django-widget-tweaks)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations customer -n remove_address_fields)",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py shell -c \"from sales.models import InvoiceShipment, ShipmentItem; shipment = InvoiceShipment.objects.get(pk=3); print(f''Shipment: {shipment.shipment_number}''); print(f''Number of items: {shipment.items.count()}''); [print(f''  - {item.invoice_item.description}: {item.quantity_shipped}'') for item in shipment.items.all()]\")",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py shell -c \"from sales.models import InvoiceShipment, ShipmentItem; shipment = InvoiceShipment.objects.get(pk=3); print(f''Invoice: {shipment.invoice.invoice_number}''); print(f''Invoice items: {shipment.invoice.items.count()}''); [print(f''  - {item.description}: {item.quantity}'') for item in shipment.invoice.items.all()]\")",
      "Bash(\"D:/Dev/dcdg/dcdg/venv/Scripts/python.exe\" manage.py shell -c \"from sales.models import InvoiceShipment, ShipmentItem; shipment = InvoiceShipment.objects.get(pk=3); invoice_item = shipment.invoice.items.first(); shipment_item = ShipmentItem.objects.create(shipment=shipment, invoice_item=invoice_item, quantity_shipped=invoice_item.quantity, notes=''Test item added via shell''); print(f''Created shipment item: {shipment_item}''); print(f''Shipment now has {shipment.items.count()} items'')\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe -c \"from django.template.loader import get_template; t = get_template(''customer_portal/dashboard.html''); print(''Template loaded successfully'')\")",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py runserver 8001)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py collectstatic --noinput)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py runserver 8000)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe update_product_images.py)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations blog)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate blog)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations sales --dry-run)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate sales --fake)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations customer --dry-run)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py migrate customer --fake)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations sales -n change_tax_rate_decimal_places)",
      "Bash(D:/Dev/dcdg/dcdg/venv/Scripts/python.exe manage.py makemigrations sales -n fix_tax_and_discount_decimal_places)"
    ],
    "deny": []
  }
}